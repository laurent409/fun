)]}'
{"version":3,"sources":["aslagle:reactive-table/lib/reactive_table.html","aslagle:reactive-table/lib/reactive_table_i18n.js","aslagle:reactive-table/lib/reactive_table.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,sC;AACA,gF;AACA,kB;AACA,oC;AACA,kD;AACA,iB;AACA,iC;AACA,yB;AACA,6B;AACA,2D;AACA,0C;AACA,uD;AACA,mB;AACA,yC;AACA,uE;AACA,qC;AACA,8B;AACA,wC;AACA,oC;AACA,oD;AACA,6D;AACA,qB;AACA,iD;AACA,iC;AACA,mC;AACA,qB;AACA,gE;AACA,iF;AACA,mC;AACA,wE;AACA,6D;AACA,qB;AACA,gD;AACA,uD;AACA,uB;AACA,6B;AACA,6D;AACA,Y;AACA,mC;AACA,mF;AACA,W;AACA,iC;AACA,qB;AACA,gD;AACA,uD;AACA,uB;AACA,6B;AACA,6D;AACA,W;AACA,iC;AACA,6D;AACA,2C;AACA,8D;AACA,mB;AACA,yC;AACA,sE;AACA,wC;AACA,mD;AACA,wB;AACA,yF;AACA,U;AACA,iC;AACA,oD;AACA,gF;AACA,wD;AACA,qD;AACA,qB;AACA,uC;AACA,yF;AACA,S;AACA,oD;AACA,qD;AACA,qB;AACA,gD;AACA,8B;AACA,mB;AACA,2B;AACA,yB;AACA,4B;AACA,6F;AACA,0D;AACA,uB;AACA,2D;AACA,6B;AACA,wB;AACA,+B;AACA,sE;AACA,a;AACA,yC;AACA,uB;AACA,2D;AACA,6B;AACA,+B;AACA,sE;AACA,a;AACA,yC;AACA,6D;AACA,6D;AACA,kF;AACA,6D;AACA,sD;AACA,sB;AACA,qD;AACA,Q;AACA,2B;AACA,+E;AACA,O;AACA,2F;AACA,mD;AACA,mB;AACA,sD;AACA,wD;AACA,qB;AACA,0D;AACA,0D;AACA,uB;AACA,kD;AACA,iC;AACA,gF;AACA,c;AACA,+B;AACA,sE;AACA,a;AACA,4D;AACA,+D;AACA,4B;AACA,2B;AACA,oB;AACA,4B;AACA,2B;AACA,oB;AACA,2D;AACA,8D;AACA,yB;AACA,oE;AACA,wF;AACA,2B;AACA,2D;AACA,yC;AACA,6C;AACA,2B;AACA,iE;AACA,iC;AACA,wB;AACA,6C;AACA,yC;AACA,yB;AACA,oE;AACA,wF;AACA,2B;AACA,2D;AACA,0C;AACA,6C;AACA,2B;AACA,iE;AACA,iC;AACA,wB;AACA,6C;AACA,yC;AACA,0D;AACA,uB;AACA,8D;AACA,6D;AACA,yB;AACA,sD;AACA,mC;AACA,kF;AACA,gB;AACA,iC;AACA,wE;AACA,e;AACA,sC;AACA,iE;AACA,wC;AACA,yB;AACA,sD;AACA,mC;AACA,iE;AACA,gB;AACA,iC;AACA,wE;AACA,e;AACA,sC;AACA,iE;AACA,wC;AACA,mC;AACA,+B;AACA,2B;AACA,gG;AACA,uD;AACA,mB;AACA,wC;AACA,6B;AACA,oG;AACA,S;AACA,kD;AACA,0E;AACA,qB;AACA,0D;AACA,0D;AACA,uB;AACA,kD;AACA,iC;AACA,4D;AACA,a;AACA,kC;AACA,uD;AACA,yB;AACA,8C;AACA,uD;AACA,2B;AACA,mD;AACA,gF;AACA,iB;AACA,e;AACA,yB;AACA,0C;AACA,oF;AACA,e;AACA,oC;AACA,+B;AACA,0C;AACA,+D;AACA,2D;AACA,mB;AACA,qC;AACA,4C;AACA,4C;AACA,wE;AACA,qB;AACA,2C;AACA,yD;AACA,+D;AACA,+E;AACA,0B;AACA,yB;AACA,kB;AACA,wB;AACA,kC;AACA,uB;AACA,6B;AACA,qE;AACA,W;AACA,0B;AACA,yB;AACA,kB;AACA,mC;AACA,sF;AACA,6C;AACA,kC;AACA,qD;AACA,8C;AACA,4D;AACA,qB;AACA,+C;AACA,kC;AACA,yB;AACA,uB;AACA,kB;AACA,2B;AACA,yB;AACA,kB;AACA,0B;AACA,yB;AACA,kB;AACA,6B;AACA,4D;AACA,6E;AACA,wB;AACA,uB;AACA,gB;AACA,sB;AACA,gC;AACA,qB;AACA,2B;AACA,mE;AACA,S;AACA,wB;AACA,uB;AACA,gB;AACA,iC;AACA,2E;AACA,sC;AACA,+D;AACA,gD;AACA,2D;AACA,qB;AACA,+C;AACA,8B;AACA,yB;AACA,yB;AACA,kB;AACA,0B;AACA,yB;AACA,kB;AACA,0B;AACA,uB;AACA,kB;AACA,8B;AACA,iD;AACA,iB;AACA,K;AACA,I;;;;;;;;;;;;;;;;;;;AC/SA,gB;AACA,oB;AACA,yB;AACA,2B;AACA,qB;AACA,qC;AACA,qB;AACA,gB;AACA,K;AACA,G;;AAEA,gB;AACA,oB;AACA,yB;AACA,qB;AACA,uC;AACA,qB;AACA,iB;AACA,K;AACA,G;;AAEA,gB;AACA,oB;AACA,yB;AACA,yB;AACA,yC;AACA,yB;AACA,gB;AACA,K;AACA,G;;AAEA,gB;AACA,oB;AACA,yB;AACA,0B;AACA,wC;AACA,uB;AACA,gB;AACA,K;AACA,G;;AAEA,gB;AACA,oB;AACA,yB;AACA,uB;AACA,yC;AACA,uB;AACA,iB;AACA,K;AACA,G;;AAEA,mB;AACA,oB;AACA,yB;AACA,wB;AACA,yC;AACA,uB;AACA,gB;AACA,K;AACA,G;;AAEA,gB;AACA,oB;AACA,yB;AACA,uB;AACA,wC;AACA,uB;AACA,gB;AACA,K;AACA,G;;AAEA,gB;AACA,oB;AACA,yB;AACA,qB;AACA,sC;AACA,qB;AACA,gB;AACA,K;AACA,G;;AAEA,gB;AACA,oB;AACA,yB;AACA,yB;AACA,yC;AACA,yB;AACA,e;AACA,K;AACA,G;;AAEA,gB;AACA,oB;AACA,2B;AACA,uB;AACA,kC;AACA,sB;AACA,iB;AACA,K;AACA,G;;AAEA,gB;AACA,oB;AACA,yB;AACA,uB;AACA,yC;AACA,uB;AACA,e;AACA,K;AACA,G;;AAEA,gB;AACA,oB;AACA,yB;AACA,uB;AACA,uC;AACA,uB;AACA,e;AACA,K;AACA,G;;AAEA,gB;AACA,oB;AACA,wB;AACA,oB;AACA,mC;AACA,qB;AACA,kB;AACA,K;AACA,G;;AAEA,gB;AACA,oB;AACA,yB;AACA,sB;AACA,wC;AACA,sB;AACA,iB;AACA,K;AACA,G;;AAEA,gB;AACA,oB;AACA,0B;AACA,sB;AACA,qC;AACA,qB;AACA,iB;AACA,K;AACA,G;;AAEA,gB;AACA,oB;AACA,yB;AACA,oB;AACA,sC;AACA,qB;AACA,gB;AACA,K;AACA,G;;;;;;;;;;;;;;;;;;;AC/JA,gC;AACA,8B;AACA,kB;;AAEA,+B;AACA,0D;AACA,+B;AACA,mE;AACA,6B;AACA,c;AACA,uB;AACA,O;AACA,K;;AAEA,e;AACA,E;;;AAGA,iD;AACA,qC;AACA,mC;AACA,qB;AACA,wC;;AAEA,wB;AACA,wB;AACA,mC;AACA,sB;AACA,4C;AACA,gF;AACA,gC;AACA,gC;AACA,oB;AACA,qD;AACA,a;AACA,iD;AACA,4C;AACA,6D;AACA,oB;AACA,+B;AACA,wD;AACA,a;AACA,gB;AACA,+B;AACA,S;AACA,O;AACA,mB;AACA,E;;AAEA,gD;AACA,+B;AACA,uB;AACA,iB;AACA,gD;AACA,+C;AACA,qC;AACA,6C;AACA,+D;AACA,+B;AACA,yD;AACA,4C;;AAEA,oD;AACA,yC;AACA,+E;AACA,qD;AACA,iB;AACA,e;AACA,yC;AACA,2D;AACA,4C;AACA,a;AACA,W;AACA,K;AACA,uD;AACA,E;;AAEA,+D;AACA,4C;AACA,wC;AACA,Q;;;AAGA,2D;AACA,4C;AACA,4B;AACA,oB;AACA,K;AACA,gD;AACA,qD;AACA,qC;AACA,oB;AACA,K;AACA,iB;AACA,E;;AAEA,0D;AACA,4C;AACA,6B;AACA,qB;AACA,K;AACA,gD;AACA,qD;AACA,sC;AACA,qB;AACA,K;AACA,gB;AACA,E;;;;AAIA,yB;AACA,qB;AACA,wC;AACA,qC;AACA,kD;AACA,wF;;AAEA,qD;AACA,oC;AACA,qC;AACA,oD;AACA,kC;AACA,qD;AACA,yC;AACA,uC;AACA,e;AACA,oD;AACA,qC;AACA,kE;AACA,oC;AACA,qD;;AAEA,kE;AACA,sD;AACA,uD;;AAEA,gD;AACA,uC;AACA,c;AACA,0D;AACA,mD;AACA,c;AACA,qD;AACA,8C;AACA,c;AACA,uG;AACA,gB;AACA,wH;AACA,qD;AACA,S;AACA,K;AACA,oC;;AAEA,qE;AACA,oC;AACA,uC;AACA,yC;AACA,sE;AACA,K;;AAEA,oB;AACA,0B;;AAEA,2C;AACA,wC;AACA,8C;AACA,gB;AACA,yB;AACA,S;AACA,M;;AAEA,0C;AACA,yB;AACA,wB;AACA,6F;AACA,mC;AACA,a;AACA,S;AACA,qC;AACA,M;;AAEA,uC;AACA,4B;AACA,yG;AACA,iI;;AAEA,2B;AACA,wC;AACA,+E;AACA,gC;AACA,S;AACA,O;AACA,2K;;;AAGA,+F;AACA,uC;AACA,2B;AACA,iD;AACA,K;AACA,gC;;AAEA,+G;AACA,wF;;AAEA,uG;AACA,sG;AACA,4K;AACA,+G;;AAEA,mG;AACA,wE;;AAEA,uF;;AAEA,kD;AACA,gE;AACA,uE;AACA,wE;AACA,0C;AACA,gB;AACA,2C;AACA,S;AACA,Y;AACA,0D;AACA,K;AACA,sC;;AAEA,2B;AACA,E;;;AAGA,gC;AACA,6C;AACA,qE;AACA,0D;AACA,0C;AACA,E;;;AAGA,gC;;AAEA,4B;AACA,2C;AACA,yE;AACA,4C;AACA,S;AACA,2C;AACA,M;;AAEA,mC;AACA,+D;AACA,mC;AACA,qC;AACA,iC;AACA,M;;AAEA,kC;AACA,8D;AACA,M;;AAEA,2B;AACA,gC;AACA,M;;AAEA,6B;AACA,kE;AACA,M;;AAEA,8B;AACA,gD;AACA,8E;AACA,M;;AAEA,+B;AACA,mE;AACA,M;;AAEA,8B;AACA,yB;AACA,kF;AACA,gD;AACA,gB;AACA,gD;AACA,S;AACA,uD;AACA,yC;AACA,uE;AACA,M;;AAEA,iC;AACA,uE;AACA,qC;AACA,M;;AAEA,+B;AACA,qD;AACA,8C;AACA,2D;;AAEA,2C;AACA,iD;AACA,uC;AACA,yE;;AAEA,2D;AACA,iE;AACA,0D;AACA,yE;AACA,e;AACA,uC;AACA,0C;AACA,a;AACA,oD;AACA,gB;AACA,2D;AACA,+B;AACA,+C;;AAEA,sD;AACA,gC;AACA,2B;AACA,4B;AACA,e;AACA,S;AACA,M;;AAEA,4B;AACA,uC;AACA,M;;AAEA,kC;;AAEA,oC;AACA,sC;AACA,M;;AAEA,oC;AACA,0C;AACA,M;;AAEA,mC;AACA,0C;AACA,M;;AAEA,kC;AACA,qD;AACA,iD;AACA,yE;AACA,8D;AACA,4D;AACA,M;;AAEA,oC;AACA,0D;AACA,0D;AACA,2C;AACA,K;AACA,G;;AAEA,+B;AACA,yD;AACA,2C;AACA,0F;AACA,2D;AACA,8D;AACA,6C;AACA,0E;AACA,8D;AACA,gB;AACA,oD;AACA,S;AACA,M;;AAEA,uE;AACA,2C;AACA,qC;AACA,uD;AACA,uE;AACA,qD;AACA,uF;AACA,gB;AACA,mF;AACA,S;AACA,M;;AAEA,gI;AACA,2C;AACA,+C;AACA,2C;AACA,M;;AAEA,gF;AACA,+D;AACA,iE;AACA,yC;AACA,M;;AAEA,8E;AACA,+D;AACA,gD;AACA,sC;AACA,kC;AACA,S;AACA,8B;AACA,0B;AACA,S;AACA,qE;AACA,yC;AACA,M;;AAEA,yE;AACA,2C;AACA,6D;AACA,0D;AACA,M;;AAEA,qE;AACA,2C;AACA,6D;AACA,0D;AACA,K;AACA,G","file":"/packages/aslagle:reactive-table.js","sourcesContent":["\nTemplate.__checkName(\"reactiveTable\");\nTemplate[\"reactiveTable\"] = new Template(\"Template.reactiveTable\", (function() {\n  var view = this;\n  return Spacebars.With(function() {\n    return Spacebars.call(view.lookup(\"context\"));\n  }, function() {\n    return [ \"\\n    \", HTML.DIV({\n      \"class\": \"clearfix\"\n    }, \"\\n      \", HTML.DIV({\n      \"class\": \"reactive-table-options col-sm-8 pull-right\"\n    }, \"\\n        \", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"showFilter\"));\n    }, function() {\n      return [ \"\\n          \", HTML.DIV({\n        \"class\": \"form-group reactive-table-filter col-sm-8 pull-right\"\n      }, \"\\n            \", HTML.DIV({\n        \"class\": \"input-group\"\n      }, \"\\n              \", HTML.SPAN({\n        \"class\": \"input-group-addon\"\n      }, \"\\n                \", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"useFontAwesome\"));\n      }, function() {\n        return [ \"\\n                  \", HTML.I({\n          \"class\": \"fa fa-filter\"\n        }), \"\\n                \" ];\n      }, function() {\n        return [ \"\\n                  \", Blaze.View(function() {\n          return Spacebars.mustache(view.lookup(\"i18n\"), \"reactiveTable.filter\");\n        }), \"\\n                \" ];\n      }), \"\\n              \"), \"\\n              \", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"useFontAwesome\"));\n      }, function() {\n        return [ \"\\n    \t        \", HTML.INPUT({\n          \"class\": \"reactive-table-input form-control\",\n          type: \"text\",\n          value: function() {\n            return Spacebars.mustache(view.lookup(\"filter\"));\n          },\n          placeholder: function() {\n            return Spacebars.mustache(view.lookup(\"i18n\"), \"reactiveTable.filter\");\n          }\n        }), \"\\n              \" ];\n      }, function() {\n        return [ \"\\n    \t        \", HTML.INPUT({\n          \"class\": \"reactive-table-input form-control\",\n          type: \"text\",\n          value: function() {\n            return Spacebars.mustache(view.lookup(\"filter\"));\n          }\n        }), \"\\n              \" ];\n      }), \"\\n            \"), \"\\n          \"), \"\\n        \" ];\n    }), \"\\n        \", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"showColumnToggles\"));\n    }, function() {\n      return [ \"\\n          \", HTML.DIV({\n        \"class\": \"reactive-table-columns-dropdown col-sm-4 pull-right\"\n      }, \"\\n            \", HTML.BUTTON({\n        \"class\": \"btn btn-default dropdown-toggle\",\n        id: function() {\n          return [ \"reactive-table-add-column-\", Spacebars.mustache(view.lookup(\"id\")) ];\n        },\n        \"data-toggle\": \"dropdown\"\n      }, \"\\n              \", Blaze.View(function() {\n        return Spacebars.mustache(view.lookup(\"i18n\"), \"reactiveTable.columns\");\n      }), \"\\n            \"), \"\\n            \", HTML.UL({\n        \"class\": \"dropdown-menu dropdown-menu-right\",\n        role: \"menu\",\n        \"aria-labelledby\": function() {\n          return [ \"reactive-table-add-column-\", Spacebars.mustache(view.lookup(\"id\")) ];\n        }\n      }, \"\\n              \", Blaze.Each(function() {\n        return Spacebars.call(view.lookup(\"fields\"));\n      }, function() {\n        return [ \"\\n                \", HTML.LI({\n          role: \"presentation\"\n        }, HTML.A({\n          role: \"menuitem\",\n          tabindex: \"-1\",\n          \"data-target\": \"#\"\n        }, \"\\n                  \", HTML.LABEL(\"\\n                    \", Blaze.If(function() {\n          return Spacebars.call(view.lookup(\"isVisible\"));\n        }, function() {\n          return [ \"\\n                      \", HTML.INPUT({\n            type: \"checkbox\",\n            checked: \"\",\n            index: function() {\n              return Spacebars.mustache(view.lookup(\"getFieldIndex\"));\n            }\n          }), \"\\n                    \" ];\n        }, function() {\n          return [ \"\\n                      \", HTML.INPUT({\n            type: \"checkbox\",\n            index: function() {\n              return Spacebars.mustache(view.lookup(\"getFieldIndex\"));\n            }\n          }), \"\\n                    \" ];\n        }), \"\\n                    \", Blaze.View(function() {\n          return Spacebars.mustache(view.lookup(\"getLabel\"));\n        }), \"\\n                  \"), \"\\n                \")), \"\\n              \" ];\n      }), \"\\n            \"), \"\\n          \"), \"\\n        \" ];\n    }), \"\\n      \"), \"\\n    \"), \"\\n    \", HTML.TABLE({\n      id: function() {\n        return Spacebars.mustache(view.lookup(\"id\"));\n      },\n      \"class\": function() {\n        return [ Spacebars.mustache(view.lookup(\"class\")), \" reactive-table\" ];\n      }\n    }, \"\\n      \", HTML.THEAD(\"\\n        \", HTML.TR(\"\\n          \", Blaze.Each(function() {\n      return Spacebars.call(view.lookup(\"fields\"));\n    }, function() {\n      return [ \"\\n            \", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"isVisible\"));\n      }, function() {\n        return [ \"\\n              \", Blaze.If(function() {\n          return Spacebars.call(view.lookup(\"isSortKey\"));\n        }, function() {\n          return [ \"\\n                \", HTML.TH({\n            \"class\": function() {\n              return [ Spacebars.mustache(view.lookup(\"getKey\")), \" sortable\" ];\n            },\n            index: function() {\n              return Spacebars.mustache(view.lookup(\"getFieldIndex\"));\n            }\n          }, \"\\n                  \", Blaze.View(function() {\n            return Spacebars.mustache(view.lookup(\"getLabel\"));\n          }), HTML.CharRef({\n            html: \"&nbsp;\",\n            str: \" \"\n          }), HTML.CharRef({\n            html: \"&nbsp;\",\n            str: \" \"\n          }), \"\\n                  \", Blaze.If(function() {\n            return Spacebars.call(view.lookup(\"isAscending\"));\n          }, function() {\n            return [ \"\\n                    \", Blaze.If(function() {\n              return Spacebars.call(Spacebars.dot(view.lookup(\"..\"), \"useFontAwesome\"));\n            }, function() {\n              return [ \"\\n                      \", HTML.I({\n                \"class\": \"fa fa-sort-asc\"\n              }), \"\\n                    \" ];\n            }, function() {\n              return [ \"\\n                      \", HTML.CharRef({\n                html: \"&#x25BC;\",\n                str: \"▼\"\n              }), \"\\n                    \" ];\n            }), \"\\n                  \" ];\n          }, function() {\n            return [ \"\\n                    \", Blaze.If(function() {\n              return Spacebars.call(Spacebars.dot(view.lookup(\"..\"), \"useFontAwesome\"));\n            }, function() {\n              return [ \"\\n                      \", HTML.I({\n                \"class\": \"fa fa-sort-desc\"\n              }), \"\\n                    \" ];\n            }, function() {\n              return [ \"\\n                      \", HTML.CharRef({\n                html: \"&#x25B2;\",\n                str: \"▲\"\n              }), \"\\n                    \" ];\n            }), \"\\n                  \" ];\n          }), \"\\n                \"), \"\\n              \" ];\n        }, function() {\n          return [ \"\\n                \", Blaze.If(function() {\n            return Spacebars.call(view.lookup(\"isSortable\"));\n          }, function() {\n            return [ \"\\n                  \", HTML.TH({\n              \"class\": function() {\n                return [ Spacebars.mustache(view.lookup(\"getKey\")), \" sortable\" ];\n              },\n              index: function() {\n                return Spacebars.mustache(view.lookup(\"getFieldIndex\"));\n              }\n            }, Blaze.View(function() {\n              return Spacebars.mustache(view.lookup(\"getLabel\"));\n            })), \"\\n                \" ];\n          }, function() {\n            return [ \"\\n                  \", HTML.TH({\n              \"class\": function() {\n                return Spacebars.mustache(view.lookup(\"getKey\"));\n              },\n              index: function() {\n                return Spacebars.mustache(view.lookup(\"getFieldIndex\"));\n              }\n            }, Blaze.View(function() {\n              return Spacebars.mustache(view.lookup(\"getLabel\"));\n            })), \"\\n                \" ];\n          }), \"\\n              \" ];\n        }), \"\\n            \" ];\n      }), \"\\n          \" ];\n    }), \"\\n        \"), \"\\n      \"), \"\\n      \", HTML.TBODY(\"\\n        \", Blaze.Each(function() {\n      return Spacebars.call(view.lookup(\"sortedRows\"));\n    }, function() {\n      return [ \"\\n          \", HTML.TR({\n        \"class\": function() {\n          return Spacebars.mustache(Spacebars.dot(view.lookup(\"..\"), \"rowClass\"), view.lookup(\".\"));\n        }\n      }, \"\\n            \", Blaze.Each(function() {\n        return Spacebars.call(Spacebars.dot(view.lookup(\"..\"), \"fields\"));\n      }, function() {\n        return [ \"\\n              \", Blaze.If(function() {\n          return Spacebars.call(view.lookup(\"isVisible\"));\n        }, function() {\n          return [ \"\\n                \", HTML.TD({\n            \"class\": function() {\n              return Spacebars.mustache(view.lookup(\"key\"));\n            }\n          }, Blaze.If(function() {\n            return Spacebars.call(view.lookup(\"tmpl\"));\n          }, function() {\n            return Spacebars.With(function() {\n              return Spacebars.call(view.lookup(\"..\"));\n            }, function() {\n              return Spacebars.include(function() {\n                return Spacebars.call(Spacebars.dot(view.lookup(\"..\"), \"tmpl\"));\n              });\n            });\n          }, function() {\n            return Blaze.View(function() {\n              return Spacebars.mustache(view.lookup(\"getField\"), view.lookup(\"..\"));\n            });\n          })), \"\\n              \" ];\n        }), \"\\n            \" ];\n      }), \"\\n          \"), \"\\n        \" ];\n    }), \"\\n      \"), \"\\n    \"), \"\\n    \", Blaze.If(function() {\n      return Spacebars.call(view.lookup(\"showNavigation\"));\n    }, function() {\n      return [ \"\\n      \", HTML.DIV({\n        \"class\": \"reactive-table-navigation\"\n      }, \"\\n        \", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"showNavigationRowsPerPage\"));\n      }, function() {\n        return [ \"\\n          \", HTML.DIV({\n          \"class\": \"form-inline form-group rows-per-page\"\n        }, \"\\n            \", HTML.LABEL(Blaze.View(function() {\n          return Spacebars.mustache(view.lookup(\"i18n\"), \"reactiveTable.show\");\n        }), HTML.CharRef({\n          html: \"&nbsp;\",\n          str: \" \"\n        }), HTML.INPUT({\n          \"class\": \"form-control\",\n          type: \"text\",\n          value: function() {\n            return Spacebars.mustache(view.lookup(\"getRowsPerPage\"));\n          }\n        }), HTML.CharRef({\n          html: \"&nbsp;\",\n          str: \" \"\n        }), Blaze.View(function() {\n          return Spacebars.mustache(view.lookup(\"i18n\"), \"reactiveTable.rowsPerPage\");\n        })), \"\\n          \"), \"\\n        \" ];\n      }), \"\\n        \", HTML.DIV({\n        \"class\": \"form-inline form-group page-number\"\n      }, \"\\n          \", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"isntFirstPage\"));\n      }, function() {\n        return [ \"\\n            \", HTML.LABEL({\n          \"class\": \"previous-page\"\n        }, HTML.CharRef({\n          html: \"&lt;\",\n          str: \"<\"\n        })), HTML.CharRef({\n          html: \"&nbsp;\",\n          str: \" \"\n        }), HTML.CharRef({\n          html: \"&nbsp;\",\n          str: \" \"\n        }), \"\\n          \" ];\n      }), \"\\n          \", HTML.LABEL(Blaze.View(function() {\n        return Spacebars.mustache(view.lookup(\"i18n\"), \"reactiveTable.page\");\n      }), HTML.CharRef({\n        html: \"&nbsp;\",\n        str: \" \"\n      }), HTML.INPUT({\n        \"class\": \"form-control\",\n        type: \"text\",\n        value: function() {\n          return Spacebars.mustache(view.lookup(\"getCurrentPage\"));\n        }\n      }), HTML.CharRef({\n        html: \"&nbsp;\",\n        str: \" \"\n      }), Blaze.View(function() {\n        return Spacebars.mustache(view.lookup(\"i18n\"), \"reactiveTable.of\");\n      }), \" \", Blaze.View(function() {\n        return Spacebars.mustache(view.lookup(\"getPageCount\"));\n      })), \"\\n          \", Blaze.If(function() {\n        return Spacebars.call(view.lookup(\"isntLastPage\"));\n      }, function() {\n        return [ \"\\n            \", HTML.LABEL({\n          \"class\": \"next-page\"\n        }, HTML.CharRef({\n          html: \"&nbsp;\",\n          str: \" \"\n        }), HTML.CharRef({\n          html: \"&nbsp;\",\n          str: \" \"\n        }), HTML.CharRef({\n          html: \"&gt;\",\n          str: \">\"\n        })), \"\\n          \" ];\n      }), \"\\n        \"), \"\\n      \"), \"\\n    \" ];\n    }), \"\\n  \" ];\n  });\n}));\n","i18n.map('en', {\n    reactiveTable: {\n        filter: 'Filter',\n        columns: 'Columns',\n        show: 'Show',\n        rowsPerPage: 'rows per page',\n        page: 'Page',\n        of: 'of'\n    }\n});\n\ni18n.map('fr', {\n    reactiveTable: {\n        filter: 'Filtre',\n        show: 'Voir',\n        rowsPerPage: 'lignes par page',\n        page: 'page',\n        of: 'sur'\n    }\n});\n\ni18n.map('ru', {\n    reactiveTable: {\n        filter: 'Фильтр',\n        show: 'Показать',\n        rowsPerPage: 'линий на странице',\n        page: 'Страница',\n        of: 'из'\n    }\n});\n\ni18n.map('es', {\n    reactiveTable: {\n        filter: 'Filtro',\n        show:   'Mostrar',\n        rowsPerPage: 'filas por página',\n        page: 'Página',\n        of: 'de'\n    }\n});\n\ni18n.map('nl', {\n    reactiveTable: {\n        filter: 'Filter',\n        show:   'Toon',\n        rowsPerPage: 'regels per pagina',\n        page: 'Pagina',\n        of: 'van'\n    }\n});\n\ni18n.map('pt-br', {\n    reactiveTable: {\n        filter: 'Filtro',\n        show: 'Mostrar',\n        rowsPerPage: 'linhas por página',\n        page: 'Página',\n        of: 'de'\n    }\n});\n\ni18n.map('it', {\n    reactiveTable: {\n        filter: 'Filtra',\n        show: 'Mostra',\n        rowsPerPage: 'righe per pagina',\n        page: 'Pagina',\n        of: 'di'\n    }\n});\n\ni18n.map('sv', {\n    reactiveTable: {\n        filter: 'Filter',\n        show: 'Visa',\n        rowsPerPage: 'rader per sida',\n        page: 'Sida',\n        of: 'av'\n    }\n});\n\ni18n.map('ua', {\n    reactiveTable: {\n        filter: 'Фільтр',\n        show: 'Показати',\n        rowsPerPage: 'линій на страниці',\n        page: 'Страниця',\n        of: 'з'\n    }\n});\n\ni18n.map('tr', {\n    reactiveTable: {\n        filter: 'Filtrele',\n        show: 'Göster',\n        rowsPerPage: 'sayfa başı',\n        page: 'Sayfa',\n        of: ' / '\n    }\n});\n\ni18n.map('sk', {\n    reactiveTable: {\n        filter: 'Filter',\n        show: 'Zobraz',\n        rowsPerPage: 'riadkov na stranu',\n        page: 'Strana',\n        of: 'z'\n    }\n});\n\ni18n.map('cs', {\n    reactiveTable: {\n        filter: 'Filter',\n        show: 'Zobraz',\n        rowsPerPage: 'řádků na stranu',\n        page: 'Strana',\n        of: 'z'\n    }\n});\n\ni18n.map('he', {\n    reactiveTable: {\n        filter: 'פילטר',\n        show: 'הצג',\n        rowsPerPage: 'שורות לעמוד',\n        page: 'עמוד',\n        of: 'מתוך'\n    }\n});\n\ni18n.map('de', {\n    reactiveTable: {\n        filter: 'Filter',\n        show: 'Zeige',\n        rowsPerPage: 'Zeilen pro Seite',\n        page: 'Seite',\n        of: 'von'\n    }\n});\n\ni18n.map('fi', {\n    reactiveTable: {\n        filter: 'Suodata',\n        show: 'Näytä',\n        rowsPerPage: 'riviä sivulla',\n        page: 'Sivu',\n        of: ' / '\n    }\n});\n\ni18n.map('no', {\n    reactiveTable: {\n        filter: 'Filter',\n        show: 'Vis',\n        rowsPerPage: 'rader per side',\n        page: 'Side',\n        of: 'av'\n    }\n});\n","var get = function(obj, field) {\n  var keys = field.split('.');\n  var value = obj;\n\n  _.each(keys, function (key) {\n      if (_.isObject(value) && _.isFunction(value[key])) {\n          value = value[key]();\n      } else if (_.isObject(value) && !_.isUndefined(value[key])) {\n          value = value[key];\n      } else {\n          value = null;\n      }\n  });\n\n  return value;\n};\n\n\nvar parseFilterString = function (filterString) {\n    var startQuoteRegExp = /^[\\'\\\"]/;\n    var endQuoteRegExp = /[\\'\\\"]$/;\n    var filters = [];\n    var words = filterString.split(' ');\n\n    var inQuote = false;\n    var quotedWord = '';\n    _.each(words, function (word) {\n        if (inQuote) {\n            if (endQuoteRegExp.test(word)) {\n                filters.push(quotedWord + ' ' + word.slice(0, word.length - 1));\n                inQuote = false;\n                quotedWord = '';\n            } else {\n                quotedWord = quotedWord + ' ' + word;\n            }\n        } else if (startQuoteRegExp.test(word)) {\n            if (endQuoteRegExp.test(word)) {\n                filters.push(word.slice(1, word.length - 1));\n            } else {\n                inQuote = true;\n                quotedWord = word.slice(1, word.length);\n            }\n        } else {\n            filters.push(word);\n        }\n    });\n    return filters;\n};\n\nvar getFilterQuery = function (filter, fields) {\n    var numberRegExp = /^\\d+$/;\n    var queryList = [];\n    if (filter) {\n        var filters = parseFilterString(filter);\n        _.each(filters, function (filterWord) {\n            var filterQueryList = [];\n            _.each(fields, function (field) {\n                var filterRegExp = new RegExp(filterWord, 'i');\n                var query = {};\n                query[field.key || field] = filterRegExp;\n                filterQueryList.push(query);\n\n                if (numberRegExp.test(filterWord)) {\n                    var numberQuery = {};\n                    numberQuery[field.key || field] = parseInt(filterWord, 10);\n                    filterQueryList.push(numberQuery)\n                }\n            });\n            if (filterQueryList.length) {\n                var filterQuery = {'$or': filterQueryList};\n                queryList.push(filterQuery);\n            }\n        });\n    }\n    return queryList.length ? {'$and': queryList} : {};\n};\n\nvar updateFilter = _.debounce(function (template, filterText) {\n    template.context.filter.set(filterText);\n    template.context.currentPage.set(0);\n}, 200);\n\n\nvar getDefaultFalseSetting = function (key, templateData) {\n    if (!_.isUndefined(templateData[key]) &&\n        templateData[key]) {\n        return true;\n    }\n    if (!_.isUndefined(templateData.settings) &&\n        !_.isUndefined(templateData.settings[key]) &&\n        templateData.settings[key]) {\n        return true;\n    }\n    return false;\n};\n\nvar getDefaultTrueSetting = function (key, templateData) {\n    if (!_.isUndefined(templateData[key]) &&\n        !templateData[key]) {\n        return false;\n    }\n    if (!_.isUndefined(templateData.settings) &&\n        !_.isUndefined(templateData.settings[key]) &&\n        !templateData.settings[key]) {\n        return false;\n    }\n    return true;\n};\n\n\n\nvar setup = function () {\n    var context = {};\n    var oldContext = this.context || {};\n    context.templateData = this.data;\n    this.data.settings = this.data.settings || {};\n    var collection = this.data.collection || this.data.settings.collection || this.data;\n\n    if (!(collection instanceof Meteor.Collection)) {\n        if (_.isArray(collection)) {\n            // collection is an array\n            // create a new collection from the data\n            var data = collection;\n            collection = new Meteor.Collection(null);\n            _.each(data, function (doc) {\n                collection.insert(doc);\n            });\n        } else if (_.isFunction(collection.fetch)) {\n            // collection is a cursor\n            // create a new collection that will reactively update\n            var cursor = collection;\n            collection = new Meteor.Collection(null);\n\n            // copy over transforms from collection-helper package\n            collection._transform = cursor._transform;\n            collection._name = cursor.collection._name;\n\n            var addedCallback = function (doc) {\n                collection.insert(doc);\n            };\n            var changedCallback = function (doc, oldDoc) {\n                collection.update(oldDoc._id, doc);\n            };\n            var removedCallback = function (oldDoc) {\n                collection.remove(oldDoc._id);\n            };\n            cursor.observe({added: addedCallback, changed: changedCallback, removed: removedCallback});\n        } else {\n            console.log(\"reactiveTable error: argument is not an instance of Meteor.Collection, a cursor, or an array\");\n            collection = new Meteor.Collection(null);\n        }\n    }\n    context.collection = collection;\n\n    var fields = this.data.fields || this.data.settings.fields || {};\n    if (_.keys(fields).length < 1 ||\n        (_.keys(fields).length === 1 &&\n         _.keys(fields)[0] === 'hash')) {\n        fields = _.without(_.keys(collection.findOne() || {}), '_id');\n    }\n\n    var sortKey = 0;\n    var sortDirection = 1;\n\n    var normalizeField = function (field) {\n        if (typeof field === 'string') {\n            return {key: field, label: field};\n        } else {\n            return field;\n        }\n    };\n\n    var parseField = function (field, i) {\n        if (field.sort) {\n            sortKey = i;\n            if (field.sort === 'desc' || field.sort === 'descending'  || field.sort === -1) {\n                sortDirection = -1;\n            }\n        }\n        return normalizeField(field);\n    };\n\n    fields = _.map(fields, parseField);\n    context.fields = fields;\n    context.sortKey = !_.isUndefined(oldContext.sortKey) ? oldContext.sortKey : new ReactiveVar(sortKey);\n    context.sortDirection = !_.isUndefined(oldContext.sortDirection) ? oldContext.sortDirection : new ReactiveVar(sortDirection);\n\n    var visibleFields = [];\n    _.each(fields, function (field, i) {\n        if (!field.hidden || (_.isFunction(field.hidden) && !field.hidden())) {\n          visibleFields.push(i);\n        }\n    });\n    context.visibleFields = (!_.isUndefined(oldContext.visibleFields) && !_.isEmpty(oldContext.visibleFields)) ? oldContext.visibleFields : new ReactiveVar(visibleFields);\n\n\n    var rowClass = this.data.rowClass || this.data.settings.rowClass || function() {return ''};\n    if (typeof rowClass === 'string') {\n        var tmp = rowClass;\n        rowClass = function(obj) { return tmp; };\n    }\n    context.rowClass = rowClass;\n\n    context.class = this.data.class || this.data.settings.class || 'table table-striped table-hover col-sm-12';\n    context.id = this.data.id || this.data.settings.id || _.uniqueId('reactive-table-');\n\n    context.showNavigation = this.data.showNavigation || this.data.settings.showNavigation || 'always';\n    context.showNavigationRowsPerPage = getDefaultTrueSetting('showNavigationRowsPerPage', this.data);\n    context.rowsPerPage =  !_.isUndefined(oldContext.rowsPerPage) ? oldContext.rowsPerPage : new ReactiveVar(this.data.rowsPerPage || this.data.settings.rowsPerPage || 10);\n    context.currentPage = !_.isUndefined(oldContext.currentPage) ? oldContext.currentPage : new ReactiveVar(0);\n\n    context.filter = !_.isUndefined(oldContext.filter) ? oldContext.filter : new ReactiveVar(null);\n    context.showFilter = getDefaultTrueSetting('showFilter', this.data);\n\n    context.showColumnToggles = getDefaultFalseSetting('showColumnToggles', this.data);\n\n    if (_.isUndefined(this.data.useFontAwesome)) {\n        if (!_.isUndefined(this.data.settings.useFontAwesome)) {\n            context.useFontAwesome = this.data.settings.useFontAwesome;\n        } else if (!_.isUndefined(Package['fortawesome:fontawesome'])) {\n            context.useFontAwesome = true;\n        } else {\n            context.useFontAwesome = false;\n        }\n    } else {\n        context.useFontAwesome = this.data.useFontAwesome;\n    }\n    context.reactiveTableSetup = true;\n\n    this.context = context;\n};\n\n\nvar getPageCount = function () {\n    var rowsPerPage = this.rowsPerPage.get();\n    var filterQuery = getFilterQuery(this.filter.get(), this.fields);\n    var count = this.collection.find(filterQuery).count();\n    return Math.ceil(count / rowsPerPage);\n};\n\n\nTemplate.reactiveTable.helpers({\n\n    'context': function () {\n        if (!Template.instance().context ||\n            !_.isEqual(this, Template.instance().context.templateData)) {\n            setup.call(Template.instance());\n        }\n        return Template.instance().context;\n    },\n\n    'getField': function (object) {\n        var fn = this.fn || function (value) { return value; };\n        var key = this.key || this;\n        var value = get(object, key);\n        return fn(value, object);\n    },\n\n    'getFieldIndex': function () {\n        return _.indexOf(Template.parentData(1).fields, this);\n    },\n\n    'getKey': function () {\n        return this.key || this;\n    },\n\n    'getLabel': function () {\n        return _.isString(this.label) ? this.label : this.label();\n    },\n\n    'isSortKey': function () {\n        var parentData = Template.parentData(1);\n        return parentData.sortKey.get() == _.indexOf(parentData.fields, this);\n    },\n\n    'isSortable': function () {\n        return (this.sortable == undefined) ? true : this.sortable;\n    },\n\n    'isVisible': function () {\n        var topLevelData;\n        if (Template.parentData(2) && Template.parentData(2).reactiveTableSetup) {\n          topLevelData = Template.parentData(2);\n        } else {\n          topLevelData = Template.parentData(1);\n        }\n        var visibleFields = topLevelData.visibleFields;\n        var fields = topLevelData.fields;\n        return _.include(visibleFields.get(), _.indexOf(fields, this));\n    },\n\n    'isAscending' : function () {\n        var sortDirection = Template.parentData(1).sortDirection.get();\n        return (sortDirection === 1);\n    },\n\n    'sortedRows': function () {\n        var sortDirection = this.sortDirection.get();\n        var sortKeyIndex = this.sortKey.get();\n        var sortKeyField = this.fields[sortKeyIndex] || {};\n\n        var limit = this.rowsPerPage.get();\n        var currentPage = this.currentPage.get();\n        var skip = currentPage * limit;\n        var filterQuery = getFilterQuery(this.filter.get(), this.fields);\n\n        if (sortKeyField.fn && !sortKeyField.sortByValue) {\n            var data = this.collection.find(filterQuery).fetch();\n            var sorted =_.sortBy(data, function (object) {\n                return sortKeyField.fn(object[sortKeyField.key], object);\n            });\n            if (sortDirection === -1) {\n                sorted = sorted.reverse();\n            }\n            return sorted.slice(skip, skip + limit);\n        } else {\n            var sortKey = sortKeyField.key || sortKeyField;\n            var sortQuery = {};\n            sortQuery[sortKey] = sortDirection;\n\n            return this.collection.find(filterQuery, {\n                sort: sortQuery,\n                skip: skip,\n                limit: limit\n            });\n        }\n    },\n\n    'filter' : function () {\n        return this.filter.get() || '';\n    },\n\n    'getPageCount' : getPageCount,\n\n    'getRowsPerPage' : function () {\n        return this.rowsPerPage.get();\n    },\n\n    'getCurrentPage' : function () {\n        return 1 + this.currentPage.get();\n    },\n\n    'isntFirstPage' : function () {\n        return this.currentPage.get() > 0;\n    },\n\n    'isntLastPage' : function () {\n        var currentPage = 1 + this.currentPage.get();\n        var rowsPerPage = this.rowsPerPage.get();\n        var filterQuery = getFilterQuery(this.filter.get(), this.fields);\n        var count = this.collection.find(filterQuery).count();\n        return currentPage < Math.ceil(count / rowsPerPage);\n    },\n\n    'showNavigation' : function () {\n        if (this.showNavigation === 'always') return true;\n        if (this.showNavigation === 'never') return false;\n        return getPageCount.call(this) > 1;\n    }\n});\n\nTemplate.reactiveTable.events({\n    'click .reactive-table .sortable': function (event) {\n        var template = Template.instance();\n        var target = $(event.target).is('i') ? $(event.target).parent() : $(event.target);\n        var sortIndex = parseInt(target.attr('index'), 10);\n        var currentSortIndex = template.context.sortKey.get();\n        if (currentSortIndex === sortIndex) {\n            var sortDirection = -1 * template.context.sortDirection.get();\n            template.context.sortDirection.set(sortDirection);\n        } else {\n            template.context.sortKey.set(sortIndex);\n        }\n    },\n\n    'change .reactive-table-columns-dropdown input': function (event) {\n        var template = Template.instance();\n        var target = $(event.target);\n        var index = parseInt(target.attr('index'), 10);\n        var currentVisibleFields = template.context.visibleFields.get()\n        if (_.include(currentVisibleFields, index)) {\n            template.context.visibleFields.set(_.without(currentVisibleFields, index));\n        } else {\n            template.context.visibleFields.set(currentVisibleFields.concat(index));\n        }\n    },\n\n    'keyup .reactive-table-filter .reactive-table-input, input .reactive-table-filter .reactive-table-input': function (event) {\n        var template = Template.instance();\n        var filterText = $(event.target).val();\n        updateFilter(template, filterText);\n    },\n\n    'change .reactive-table-navigation .rows-per-page input': function (event) {\n        var rowsPerPage = Math.max(~~$(event.target).val(), 1);\n        Template.instance().context.rowsPerPage.set(rowsPerPage);\n        $(event.target).val(rowsPerPage);\n    },\n\n    'change .reactive-table-navigation .page-number input': function (event) {\n        var currentPage = Math.max(~~$(event.target).val(), 1);\n        var pageCount = getPageCount.call(this);\n        if (currentPage > pageCount) {\n          currentPage = pageCount;\n        }\n        if (currentPage < 0) {\n          currentPage = 1;\n        }\n        Template.instance().context.currentPage.set(currentPage - 1);\n        $(event.target).val(currentPage);\n    },\n\n    'click .reactive-table-navigation .previous-page': function (event) {\n        var template = Template.instance();\n        var currentPage = template.context.currentPage.get();\n        template.context.currentPage.set(currentPage - 1);\n    },\n\n    'click .reactive-table-navigation .next-page': function (event) {\n        var template = Template.instance();\n        var currentPage = template.context.currentPage.get();\n        template.context.currentPage.set(currentPage + 1);\n    }\n});\n"]}