{"version":3,"sources":["ryw:blog/collections/config.coffee","ryw:blog/server/boot.coffee","ryw:blog/server/rss.coffee","ryw:blog/server/publications.coffee","ryw:blog/collections/author.coffee","ryw:blog/collections/post.coffee","ryw:blog/collections/comment.coffee","ryw:blog/collections/tag.coffee","ryw:blog/collections/files.coffee","ryw:blog/router.coffee"],"names":[],"mappings":"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","file":"/packages/ryw_blog.js","sourcesContent":["class @Config extends Minimongoid\n\n  @_collection: new Meteor.Collection 'blog_config'\n","##############################################################################\n# Server-side config\n#\n\nBlog =\n  settings:\n    adminRole: null\n    adminGroup: null\n    authorRole: null\n    authorGroup: null\n    rss:\n      title: ''\n      description: ''\n\n  config: (appConfig) ->\n    @settings = _.extend(@settings, appConfig)\n\n@Blog = Blog\n\n################################################################################\n# Bootstrap Code\n#\n\nMeteor.startup ->\n\n  ##############################################################################\n  # Migrations\n  #\n\n  Post._collection._ensureIndex 'slug': 1\n  Comment._collection._ensureIndex 'slug': 1\n\n  # Create 'excerpt' field if none\n  if Post.where({ excerpt: { $exists: 0 }}).length\n    arr = Post.where({ excerpt: { $exists: 0 }})\n    i = 0\n    while i < arr.length\n      obj = arr[i++]\n      obj.update({ excerpt: Post.excerpt(obj.body) })\n\n  # Set version flag\n  if not Config.first()\n    Config.create versions: ['0.5.0']\n  else\n    Config.first().push versions: '0.5.0'\n\n  # Add side comments\n  arr = Post.all()\n  i = 0\n  while i < arr.length\n    obj = arr[i++]\n    html = obj.body\n    para = /<p[^>]*>/g\n    classPattern = /class=[\\\"|\\'].*[\\\"|\\']/g\n    if html?.indexOf('commentable-section') < 0\n      index = 0\n      html = html.replace(para, (ele) ->\n        if classPattern.test(ele)\n          newEle = ele.replace('class=\\\"', 'class=\\\"commentable-section')\n        else\n          newEle = ele.replace('>', ' class=\\\"commentable-section\\\">')\n        newEle = newEle.replace('>', \" data-section-id=\\\"#{index}\\\">\")\n        index++\n        return newEle\n      )\n      obj.update body: html\n\n  # Ensure tags collection is non-empty\n  if Tag.count() == 0\n    Tag.create\n      tags: ['meteor']\n","Meteor.methods\n\n  serveRSS: () ->\n    RSS = Npm.require('rss')\n    host = _.trim Meteor.absoluteUrl(), '/'\n\n    feed = new RSS\n      title: Blog.settings.rss.title\n      description: Blog.settings.rss.description\n      feed_url: host + '/rss/posts'\n      site_url: host\n      image_url: host + '/favicon.ico'\n\n    posts = Post.where\n      published: true\n    ,\n      sort:\n        publishedAt: -1\n      limit: 20\n\n    posts.forEach (post) ->\n      feed.item\n       title: post.title\n       description: post.excerpt\n       author: post.authorName()\n       date: post.publishedAt\n       url: \"#{host}/blog/#{post.slug}\"\n       guid: post._id\n\n    return feed.xml()\n","\n#\n# Public Publications\n#\n\nMeteor.publish 'commentsBySlug', (slug) ->\n  check slug, String\n\n  Comment.find slug: slug\n\nMeteor.publish 'singlePostBySlug', (slug) ->\n  check slug, String\n\n  Post.find slug: slug\n\nMeteor.publish 'posts', (limit) ->\n  check limit, Match.OneOf(Number, null)\n\n  if limit is null then return @ready()\n\n  Post.find { published: true },\n    fields: body: 0\n    sort: publishedAt: -1\n    limit: limit\n\nMeteor.publish 'taggedPosts', (tag) ->\n  check tag, String\n\n  Post.find\n    published: true\n    tags: tag\n  ,\n    fields: body: 0\n    sort: publishedAt: -1\n\nMeteor.publish 'authors', ->\n  ids = _.uniq(_.pluck(Post.all(fields: userId: 1), 'userId'))\n\n  Author.find\n    _id: $in: ids\n  ,\n    fields:\n      profile: 1\n      username: 1\n      emails: 1\n\n\n#\n# Admin Publications\n#\n\nMeteor.publish 'singlePostById', (id) ->\n  check id, String\n\n  if not @userId\n    return @ready()\n\n  Post.find _id: id\n\nMeteor.publish 'postTags', ->\n  if not @userId\n    return @ready()\n\n  initializing = true\n  tags = Tag.first().tags\n\n  handle = Post.find({}, {fields: {tags: 1}}).observeChanges\n    added: (id, fields) =>\n      if fields.tags\n        doc = Tag.first()\n        tags = _.uniq doc.tags.concat(Post.splitTags(fields.tags))\n        doc.update tags: tags\n        @changed('blog_tags', 42, {tags: tags}) unless initializing\n\n    changed: (id, fields) =>\n      if fields.tags\n        doc = Tag.first()\n        tags = _.uniq doc.tags.concat(Post.splitTags(fields.tags))\n        doc.update tags: tags\n        @changed('blog_tags', 42, {tags: tags}) unless initializing\n\n  initializing = false\n  @added 'blog_tags', 42, {tags: tags}\n  @ready()\n  @onStop -> handle.stop()\n\nMeteor.publish 'postForAdmin', ->\n  if not @userId\n    return @ready()\n\n  sel = {}\n\n  # If author role is set, and user is author, only return user's posts\n  if Blog.settings.authorRole and Roles.userIsInRole(@userId, Blog.settings.authorRole)\n    sel = userId: @userId\n\n  Post.find sel,\n    fields: body: 0\n    sort: publishedAt: -1\n","class @Author extends Minimongoid\n\n  @_collection: Meteor.users\n\n  @has_many: [\n    name: 'posts'\n    foreign_key: 'userId'\n  ]\n\n  @current: ->\n    if Meteor.userId()\n      Author.init Meteor.user()\n","class @Post extends Minimongoid\n\n  @_collection: new Meteor.Collection 'blog_posts'\n\n  @belongs_to: [\n    name: 'author'\n    identifier: 'userId'\n  ]\n\n  @after_save: (post) ->\n    post.tags = Post.splitTags post.tags\n    post.excerpt = Post.excerpt post.body if post.body\n\n    @_collection.update _id: post.id,\n      $set:\n        tags: post.tags\n        excerpt: post.excerpt\n\n  @slugify: (str) ->\n    str.toLowerCase().replace(/[^\\w ]+/g, \"\").replace(RegExp(\" +\", \"g\"), \"-\")\n\n  @splitTags: (str) ->\n    if str and typeof str is 'string'\n      return str.split(/,\\s*/)\n    str\n\n  validate: ->\n    if not @title\n      @error 'title', \"Blog title is required\"\n\n    if not @slug\n      @error 'slug', \"Blog slug is required\"\n\n  html: ->\n    @body\n\n  thumbnail: ->\n    if @featuredImage?\n      if Meteor.settings?.public?.blog?.useS3\n        @featuredImage\n      else\n        Meteor.absoluteUrl() + @featuredImage\n    else\n      regex = new RegExp /img src=[\\'\"]([^\\'\"]+)/ig\n      while match = regex.exec @body\n        return match[1]\n\n  @excerpt: (html) ->\n    if Blog.settings.excerptFunction?\n      Blog.settings.excerptFunction html\n    else\n      # Find 1st non-empty paragraph\n      matches = html?.split /<\\/div>|<\\/p>|<\\/blockquote>|<br><br>|\\\\n\\\\n|\\\\r\\\\n\\\\r\\\\n/m\n\n      i = 0\n      ret = ''\n      while not ret and matches?[i]\n        # Strip tags and clean up whitespaces\n        ret += matches[i++].replace(/(<([^>]+)>)/ig, ' ').replace(/(\\s\\.)/, '.').replace('&nbsp;', ' ').trim()\n      ret\n\n  authorName: ->\n    author = @author()\n\n    if author\n      if author.profile and author.profile.name\n        return author.profile.name\n\n      else if author.profile and author.profile.firstName and author.profile.lastName\n        return \"#{author.profile.firstName} #{author.profile.lastName}\"\n\n      else if author.profile and author.profile.twitter\n        return \"<a href=\\\"http://twitter.com/#{author.profile.twitter}\\\">#{author.profile.twitter}</a>\"\n\n      else if author.username\n        return author.username\n\n      else if author.emails and author.emails[0]\n        return author.emails[0].address\n\n    'Mystery blogger'\n\n\n#\n# Server Methods\n#\n\nif Meteor.isServer\n  Meteor.methods\n    doesBlogExist: (slug) ->\n      check slug, String\n\n      !! Post.first slug: slug\n\n    isBlogAuthorized: () ->\n      check arguments[0], Match.OneOf(Object, Number, String, null, undefined)\n\n      if not Meteor.user()\n        return false\n\n      # If no roles are set, allow all\n      if not Blog.settings.adminRole and not Blog.settings.authorRole\n        return true\n\n      # If admin role is set\n      if Blog.settings.adminRole\n        # And if admin group is set\n        if Blog.settings.adminGroup\n          # And if user is admin\n          if Roles.userIsInRole(@userId, Blog.settings.adminRole, Blog.settings.adminGroup)\n            # Then they can do anything\n            return true\n\n        # If only admin role is set, and if user is admin\n        else if Roles.userIsInRole(@userId, Blog.settings.adminRole)\n          # Then they can do anything\n          return true\n\n\n      # If author role is set\n      if Blog.settings.authorRole\n\n        # Get the post\n        if _.isObject arguments[0]\n          post = arguments[0]\n        else if _.isNumber(arguments[0]) or _.isString(arguments[0])\n          post = Post.first arguments[0]\n        else\n          post = null\n\n        # And if author group is set\n        if Blog.settings.authorGroup\n          # And if user is author\n          if Roles.userIsInRole(@userId, Blog.settings.authorRole, Blog.settings.authorGroup)\n            if post\n              # And if user is author of this post\n              if Meteor.userId() is post.userId\n                return true\n            else\n              return true\n\n        # If only author role is passed, and if user is author\n        else if Roles.userIsInRole(@userId, Blog.settings.authorRole)\n          if post\n            # And if user is author of this post\n            if Meteor.userId() is post.userId\n              return true\n          else\n            return true\n\n\n      false\n\n\n#\n# Authorization\n#\n\nPost._collection.allow\n  insert: (userId, item) ->\n    Meteor.call 'isBlogAuthorized', item\n\n  update: (userId, item, fields) ->\n    Meteor.call 'isBlogAuthorized', item\n\n  remove: (userId, item) ->\n    Meteor.call 'isBlogAuthorized', item\n","class @Comment extends Minimongoid\n\n  @_collection: new Meteor.Collection 'blog_comments'\n\n  @belongs_to: [\n    name: 'post'\n    identifier: 'postId'\n  ]\n\nComment._collection.allow\n  insert: (userId, doc) ->\n    !!userId\n  update: (userId, doc, fields, modifier) ->\n    doc.comment.authorId == userId\n  remove: (userId, doc) ->\n    doc.comment.authorId == userId\n","class @Tag extends Minimongoid\n\n  @_collection: new Meteor.Collection('blog_tags')\n","############################################################################/\n##        Local Filestore                                                  /\n##########################################################################/\n@FilesLocal = FileCollection\n  resumable: false\n  baseURL: '/fs'\n  http: [\n    method: 'get',\n    path: '/:id',\n    lookup: (params, query) ->\n      _id: new Meteor.Collection.ObjectID(params.id)\n  ,\n    method: 'post',\n    path: '/:id',\n    lookup: (params, query) ->\n      _id: new Meteor.Collection.ObjectID(params.id)\n  ]\n\nif Meteor.isServer\n  FilesLocal.allow\n    insert: (userId, file) ->\n      !!userId\n    remove: (userId, file) ->\n      # Only owners can delete\n      return file.metadata and file.metadata.userId and file.metadata.userId is userId\n    write: ->\n      # Anyone can POST a file\n      true\n    read: (userId, file) ->\n      # Anyone can GET a file\n      true\n\n\n############################################################################/\n##        Amazon S3 Filestore                                              /\n##########################################################################/\nuseS3 = Meteor.settings?.public?.blog?.useS3\n\nif Meteor.isClient and useS3\n  @s3ImportStore = new FS.Store.S3 \"s3Imports\"\n\n  @S3Files = new FS.Collection \"s3Imports\",\n    stores: [s3ImportStore]\n    filter:\n      # maxSize: 3145728\n      allow:\n        contentTypes: [\n          'image/*'\n        ]\n    onInvalid: (message) ->\n      console.log message\n\n  Meteor.subscribe \"s3Imports\"\n\nif Meteor.isServer and useS3\n  s3Config = Meteor.settings?.private?.blog?.s3Config\n  @s3ImportStore = new FS.Store.S3 \"s3Imports\",\n    accessKeyId:  s3Config.accessKeyId\n    secretAccessKey:  s3Config.secretAccessKey\n    bucket: s3Config.bucket\n    ACL:  s3Config.s3ACL\n    maxTries: s3Config.s3MaxTries\n    region: s3Config.region\n\n  @S3Files = new FS.Collection \"s3Imports\",\n    stores: [s3ImportStore]\n    filter:\n      # maxSize: 3145728\n      allow:\n        contentTypes: [\n          'image/*'\n        ]\n    onInvalid: (message) ->\n      console.log message\n\n  Meteor.publish 's3Imports', () ->\n    S3Files.find()\n  S3Files.allow\n    insert: (userId, file) ->\n      userId\n    remove: (userId, file) ->\n      # Only owners can delete\n      return file.metadata and file.metadata.userId and file.metadata.userId is userId\n    update: ->\n      # Anyone can POST a file\n      true\n    download: (userId, file) ->\n      # Anyone can GET a file\n      true\n","subs = new SubsManager\n  cacheLimit: 10, # Maximum number of cache subscriptions\n  expireIn: 5 # Any subscription will be expire after 5 minute, if it's not subscribed again\n\nif Meteor.isClient\n  Router.onBeforeAction ->\n    @notFoundTemplate =\n      if Blog.settings.blogNotFoundTemplate\n        Blog.settings.blogNotFoundTemplate\n      else\n        'blogNotFound'\n    Iron.Router.hooks.dataNotFound.call @\n  , only: ['blogShow']\n\n# RSS\n\nRouter.route '/rss/posts',\n  name: 'rss'\n  where: 'server'\n  action: ->\n    @response.write Meteor.call 'serveRSS'\n    @response.end()\n\n# BLOG INDEX\n\nRouter.route '/blog',\n  name: 'blogIndex'\n  template: 'custom'\n  onRun: ->\n    if not Session.get('postLimit') and Blog.settings.pageSize\n      Session.set 'postLimit', Blog.settings.pageSize\n    @next()\n  waitOn: ->\n    if (typeof Session isnt 'undefined')\n      [\n        subs.subscribe 'posts', Session.get('postLimit')\n        subs.subscribe 'authors'\n      ]\n  fastRender: true\n  data: ->\n    posts: Post.where {},\n      sort: publishedAt: -1\n\n# BLOG TAG\n\nRouter.route '/blog/tag/:tag',\n  name: 'blogTagged'\n  template: 'custom'\n  waitOn: -> [\n    subs.subscribe 'taggedPosts', @params.tag\n    subs.subscribe 'authors'\n  ]\n  fastRender: true\n  data: ->\n    posts: Post.where\n      tags: @params.tag\n    ,\n      sort: publishedAt: -1\n\n# SHOW BLOG\n\nRouter.route '/blog/:slug',\n  name: 'blogShow'\n  template: 'custom'\n  onRun: ->\n    Session.set('slug', @params.slug)\n    @next()\n  onBeforeAction: ->\n    if Blog.settings.blogShowTemplate\n      tpl = Blog.settings.blogShowTemplate\n\n      # If the user has a custom template, and not using the helper, then\n      # maintain the package Javascript.\n      pkgFunc = Template.blogShowBody.rendered\n      userFunc = Template[tpl].rendered\n\n      if userFunc\n        Template[tpl].rendered = ->\n          pkgFunc.call(@)\n          userFunc.call(@)\n      else\n        Template[tpl].rendered = pkgFunc\n\n    if !Blog.settings.publicDrafts and !Post.first().published\n      Meteor.call 'isBlogAuthorized', (err, authorized) =>\n        return @redirect('/blog') unless authorized\n    Session.set 'postHasFeaturedImage', Post.first({slug: @params.slug}).featuredImage?.length > 0\n    @next()\n  action: ->\n    @render() if @ready()\n  waitOn: -> [\n    Meteor.subscribe 'singlePostBySlug', @params.slug\n    subs.subscribe 'commentsBySlug', @params.slug\n    subs.subscribe 'authors'\n  ]\n  data: ->\n    Post.first slug: @params.slug\n\n# BLOG ADMIN INDEX\n\nRouter.route '/admin/blog',\n  name: 'blogAdmin'\n  template: 'custom'\n  onBeforeAction: ->\n    if Meteor.loggingIn()\n      return\n\n    Deps.autorun () ->\n      Router.go 'blogIndex' if not Meteor.userId()\n\n    Meteor.call 'isBlogAuthorized', (err, authorized) =>\n      if not authorized\n        return @redirect('/blog')\n\n    @next()\n  waitOn: ->\n    [ Meteor.subscribe 'postForAdmin'\n      Meteor.subscribe 'authors' ]\n\n# NEW/EDIT BLOG\n\nRouter.route '/admin/blog/edit/:id',\n  name: 'blogAdminEdit'\n  template: 'custom'\n  onBeforeAction: ->\n    if Meteor.loggingIn()\n      return\n\n    Deps.autorun () ->\n      Router.go 'blogIndex' if not Meteor.userId()\n\n    Meteor.call 'isBlogAuthorized', @params.id, (err, authorized) =>\n      if not authorized\n        return @redirect('/blog')\n\n    Session.set 'postId', @params.id\n    @next() if Session.get(\"postId\").length?\n  action: ->\n    @render() if @ready()\n  waitOn: -> [\n    Meteor.subscribe 'singlePostById', @params.id\n    Meteor.subscribe 'authors'\n    Meteor.subscribe 'postTags'\n  ]"]}